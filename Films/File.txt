City.shared.fetchCities { [weak self] result in
    switch result {
    case .success(let cities):
        DispatchQueue.main.async {
            self?.updateCityCollectionView(with: cities)
        }
    case .failure(_):
        DispatchQueue.main.async {
            let noInternetAlert = UIAlertAction(title: "Ок", style: .default)
            let alert = UIAlertController(title: "Ошибка", message: "Не удалось загрузить города", preferredStyle: .alert)
            alert.addAction(noInternetAlert)
            // Убедитесь, что у вас есть ссылка на UIViewController
            if let viewController = self?.parentViewController {
                viewController.present(alert, animated: true, completion: nil)
            }
        }
    }
}City.shared.fetchCities { [weak self] result in
            switch result {
            case .success(let cities):
                DispatchQueue.main.async {
                    
                }
            case .failure(_):
                DispatchQueue.main.async {
                    let noInternetAlert = UIAlertAction(title: "Ок", style: .default)
                    let alert = UIAlertController(title: "Ошибка", message: "Не удалось загрузить города", preferredStyle: .alert)
                    alert.addAction(noInternetAlert)
                    self?.present(alert, animated: true, completion: nil)
                }
            }
        }
