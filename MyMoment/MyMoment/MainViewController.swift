//
//  MainViewController.swift
//  MyMoment
//
//  Created by –ü–∞–≤–µ–ª on 16.10.2024.
//

import UIKit

class MainViewController: UIViewController {

    // MARK: - Types

    enum TableSection {
        case main
    }

    // MARK: - Properties

    private var posts: [Post] = [
        Post(
            id: UUID(),
            title: "–ö—Ä–∞—Å–∏–≤–æ–µ",
            date: Date.distantPast,
            text: "",
            photos: [UIImage(named: "image4")!, UIImage(named: "image5")!, UIImage(named: "image6")!, UIImage(named: "image8")!]
        ),
        Post(
            id: UUID(),
            title: "–ö–∞–∑–∞–Ω—å",
            date: Date.distantPast,
            text: "–ü—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤—ã–µ —Ñ–æ—Ç–æ—á–∫–∏",
            photos: [UIImage(named: "image1")!, UIImage(named: "image2")!, UIImage(named: "image3")!]
        ),
        Post(
            id: UUID(),
            title: "Apple –∑–∞–∫—Ä—É—á–∏–≤–∞–µ—Ç –≥–∞–π–∫–∏",
            date: Date.distantPast,
            text:"""
            üí≥ –í–æ–æ–±—â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –ø–æ–∫—É–ø–∫–∞–º–∏ –ø–æ —Å—Å—ã–ª–∫–µ. –°–∞–ø–ø–æ—Ä—Ç –∏–≥–Ω–æ—Ä–∏—Ç –≤—Å–µ—Ö (–ø—Ä–∏–º. –∫—Ç–æ –±—ã–ª –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
            üí≥ –•–æ–ª–¥—è—Ç –≤—ã–ø–ª–∞—Ç—ã —Å —Ä—Ñ-–∞–∫–∫–∞—É–Ω—Ç–æ–≤. –£ –∫–æ–≥–æ-—Ç–æ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ, –Ω–æ –∂–∞–ª–æ–± —Å—Ç–∞–ª–æ –±–æ–ª—å—à–µ —á–µ–º –æ–±—ã—á–Ω–æ
            üìä –í—ã—Ä—É–±–∏–ª–∏ Apple Search Ads
            –ú–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –æ –ø–∞–∫–µ—Ç–µ —Å–∞–Ω–∫—Ü–∏–π 12 —Å–µ–Ω—Ç—è–±—Ä—è, –Ω–æ –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–∏–∫–∏. –†–∞–∑–±–µ—Ä–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–µ–π—Å—ã:
            –ï—Å–ª–∏ –∑–∞–ø—Ä–µ—Ç—è—Ç –æ–ø–ª–∞—á–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã, —Ç–æ –º–æ–∂–Ω–æ —Ä–µ–≥–∞—Ç—å –∏—Ö –≤ –¥—Ä—É–≥–æ–º —Ä–µ–≥–∏–æ–Ω–µ. –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ–ª—å—à–æ–µ ‚Äî –ª—É—á—à–µ –æ—Ç–∫—Ä—ã—Ç—å –∫–æ–º–ø–∞–Ω–∏—é, –ø–æ–¥–æ–π–¥—É—Ç UK –∏–ª–∏ –ì–æ–Ω–∫–æ–Ω–≥ (–¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ –∏ –¥—ë—à–µ–≤–æ)
            –ï—Å–ª–∏ –æ—Ç–∑–æ–≤—É—Ç –ø–ª–∞—Ç–Ω—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
            –°–µ–π—á–∞—Å –æ–Ω–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–æ 2022 –≥–æ–¥–∞, –µ—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –Ω–µ–¥–∞–≤–Ω–æ ‚Äî —É –≤–∞—Å –µ–≥–æ –∏ —Ç–∞–∫ –Ω–µ—Ç. –ï—Å–ª–∏ –µ—Å—Ç—å, –ª—É—á—à–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞—Ä–∞–Ω–µ–µ
            –ó–∞–∫—Ä–æ—é—Ç —É—á–µ—Ç–∫–∏ –†–§-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            –ß—Ç–æ –¥–µ–ª–∞—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–∫—Ä–æ—é—Ç. –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞ –ø–∞—É–∑—É, —Ç–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –ï—Å–ª–∏ –æ—Ç–∑–æ–≤—É—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ ‚Äî –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–∏—Å–Ω–µ—Ç –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ
            –°–ª–µ–¥–∏—Ç—å –º–æ–∂–Ω–æ –≤ –Ω–∞—à–µ–º —á–∞—Ç–µ –ø–æ üë®‚Äçüíª App Store Connect. –ï—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ, –Ω–∞–ø–∏—à—É –∑–¥–µ—Å—å 
            """,
            photos: [UIImage(named: "image9")!]
        ),
        Post(
            id: UUID(),
            title: "–ü–æ–≥—É–ª—è–ª–∏ :)",
            date: Date.distantPast,
            text: "–≠—Ç–æ —è —Å –¥—Ä—É–∑—å—è–º–∏ –±—ã–ª, —â–∞—Å –¥–æ–º–∞ —É–∂–µ",
            photos: [UIImage(named: "image7")!]
        ),
    ]

    private lazy var addPost = UIAction { [weak self] _ in
        guard let self = self else { return }
        let createViewController = CreateViewController()
        createViewController.newPostClosure = { [weak self] newPost in
            self?.posts.append(newPost)
            self?.updateDataSource(with: self!.posts)
        }
        let navigationController = UINavigationController(rootViewController: createViewController)
        createViewController.modalPresentationStyle = .formSheet
        self.present(navigationController, animated: true)
    }

    private lazy var tableView: UITableView = {
        let table = UITableView()
        table.translatesAutoresizingMaskIntoConstraints = false
        table.register(MomentTableViewCell.self, forCellReuseIdentifier: MomentTableViewCell.identifier)
        table.estimatedRowHeight = 300
        table.separatorColor = .clear
        table.backgroundColor = .systemGray6
        table.delegate = self
        return table
    }()

    private var dataSource: UITableViewDiffableDataSource<TableSection, Post>?

    // MARK: - View Lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = .systemGray6
        view.addSubview(tableView)
        setupUI()
        configureDataSource()
        setupNavigationBar()
    }

    // MARK: - Setup

    private func setupNavigationBar() {
        navigationItem.title = "–ú–æ–º–µ–Ω—Ç—ã"
        navigationItem.rightBarButtonItem = UIBarButtonItem(image: UIImage(systemName: "pencil.and.list.clipboard"), primaryAction: addPost)
    }

    private func configureDataSource() {
        dataSource = UITableViewDiffableDataSource(tableView: tableView, cellProvider: { tableView, indexPath, post in
            let cell = tableView.dequeueReusableCell(withIdentifier: MomentTableViewCell.identifier, for: indexPath)
            as! MomentTableViewCell
            cell.configureCell(with: post)
            return cell
        })
        updateDataSource(with: posts)
    }

    private func updateDataSource(with posts: [Post]) {
        var snapshot = NSDiffableDataSourceSnapshot<TableSection, Post>()
        snapshot.appendSections([.main])
        snapshot.appendItems(posts)
        dataSource?.apply(snapshot, animatingDifferences: true)
    }

    private func setupUI() {
        NSLayoutConstraint.activate([
            tableView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor),
            tableView.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor),
            tableView.trailingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.trailingAnchor),
            tableView.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor)
        ])
    }
}

// MARK: - UITableViewDelegate

extension MainViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let post = dataSource?.itemIdentifier(for: indexPath)

        let detailViewController = DetailViewController()
        detailViewController.post = post
        detailViewController.delegate = self
        navigationController?.pushViewController(detailViewController, animated: true)
        tableView.deselectRow(at: indexPath, animated: true)
    }
}

// MARK: - DetailPostDelegate

extension MainViewController: DetailPostDelegate {
    func updatePost(post: Post) {
        if let index = posts.firstIndex(where: { $0.id == post.id }) {
            posts.remove(at: index)
            posts.insert(post, at: index)
            updateDataSource(with: posts)
        }
    }

    func deletePost(post: Post) {
        if let index = posts.firstIndex(where: { $0.id == post.id }) {
            guard var snapshot = dataSource?.snapshot() else { return }
            posts.remove(at: index)
            snapshot.deleteItems([post])
            dataSource?.apply(snapshot)
        }
    }
}
